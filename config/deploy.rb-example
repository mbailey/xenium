require 'deprec'

# Instructions for deploying Xenium

# 1. Specify the domain name Xenium should be served on.

	set :domain, "host.example.com"

# 2. Update these if you're not running everything on the host specified above.

	role :app, domain
	role :web, domain
	role :db,  domain, :primary => true

# 3. Run 'cap install_xenium' to install a full Rails stack and start Xenium.

# 4. You're done. Login to the Xenium web interface.



##################################################
# You shouldn't need to change the values below. #
##################################################

set :application, "xenium"
set :scm, :git
set :repository,  "git://github.com/mbailey/xenium.git"

# Xenium uses the ruby-xen gem. 
# http://github.com/mbailey/ruby-xen/tree/master
#
set :gems_for_project, %w(ruby-xen bj) # list of gems to be installed

# Ensure production database is maintained between deployments
set :shared_dirs, %w(db/production system)

# Xenium needs to run as root in order to control Xen
set :app_user, :root

# Passenger doesn't permit us to run as root so we use mongrel+nginx
set :ruby_vm_type,    :mri
set :web_server_type, :apache
set :app_server_type, :mongrel
set :db_server_type,  :sqlite

set :apache_ssl_enabled, true
set :apache_ssl_forward_all, true

namespace :deploy do
  task :restart, :roles => :app, :except => { :no_release => true } do
    top.deprec.app.restart
  end
end

# Ensure we have write access to database
before 'deploy:migrate' do 
  sudo "chmod -R g+w #{shared_path}/db"
end

task :install_xenium do
  top.deprec.rails.install_stack
  top.deploy.setup
  top.deploy.default
  top.deploy.migrate
  puts <<-EOF

    Xenium is installed and should be accessible at:

        http://#{domain}/

EOF
end
